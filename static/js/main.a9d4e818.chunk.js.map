{"version":3,"sources":["img/EmilyBlog.png","img/GhoulGame.png","Projectcard.js","Pokedex.js","Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Projectcard","className","this","props","name","src","img","alt","type","exp","Component","Pokedex","title","projects","map","p","id","altText","year","EmilyBlog","require","GhoulGame","Portfolio","hand1","hand2","length","randIdx","Math","floor","random","randprojects","splice","push","exp1","reduce","base_experience","exp2","isWinner","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2LAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,qICsB5BC,G,6KAXP,OACI,yBAAKC,UAAU,eACX,wBAAIA,UAAU,qBAAqBC,KAAKC,MAAMC,MAC9C,yBAAKC,IAAKH,KAAKC,MAAMG,IAAKC,IAAKL,KAAKC,MAAMI,MAC1C,yBAAKN,UAAU,oBAAoBC,KAAKC,MAAMK,MAC9C,yBAAKP,UAAU,oBAAoBC,KAAKC,MAAMM,U,GARpCC,cCmBXC,G,6KAfP,OACI,yBAAKV,UAAU,WACX,iCARJW,GASI,+CAAqBV,KAAKC,MAAMM,KAChC,yBAAKR,UAAU,iBACVC,KAAKC,MAAMU,SAASC,KAAI,SAACC,GAAD,OACrB,kBAAC,EAAD,CAAaC,GAAID,EAAEC,GAAIV,IAAKS,EAAET,IAAKC,IAAKQ,EAAEE,QAASb,KAAMW,EAAEX,KAAMI,KAAMO,EAAEP,KAAMC,IAAKM,EAAEG,gB,GAdxFR,cCDlBS,EAAYC,EAAQ,IACpBC,EAAYD,EAAQ,IAElBE,E,uKAeE,IAFA,IAAIC,EAAQ,GACRC,EAAK,YAAOtB,KAAKC,MAAMU,UACpBU,EAAME,OAASD,EAAMC,QAAS,CACjC,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QAC3CK,EAAeN,EAAMO,OAAOL,EAAS,GAAG,GAC5CH,EAAMS,KAAKF,GAEf,IAAIG,EAAOV,EAAMW,QAAO,SAACzB,EAAKI,GAAN,OAAmBJ,EAAMI,EAASsB,kBAAiB,GACvEC,EAAOZ,EAAMU,QAAO,SAACzB,EAAKI,GAAN,OAAmBJ,EAAMI,EAASsB,kBAAiB,GAC3E,OACI,6BACI,kBAAC,EAAD,CAAStB,SAAUU,EAAOd,IAAKwB,EAAMI,SAAWJ,EAAOG,IACvD,kBAAC,EAAD,CAASvB,SAAUW,EAAOf,IAAK2B,EAAMC,SAAWD,EAAOH,S,GAzB/CvB,aAAlBY,EACKgB,aAAe,CAClBzB,SAAW,CACP,CAAEG,GAAI,EAAGZ,KAAM,UAAWI,KAAM,2EAA4EU,KAAM,KAAMiB,gBAAiB,EAAGlB,QAAS,sBACrJ,CAAED,GAAI,EAAGZ,KAAM,eAAgBI,KAAM,2FAA4FU,KAAM,KAAMiB,gBAAiB,EAAG7B,IAAKa,EAAWF,QAAS,iEAC1L,CAAED,GAAI,EAAGZ,KAAM,aAAcI,KAAM,6DAA8DU,KAAM,KAAMiB,gBAAiB,EAAGlB,QAAS,6BAC1I,CAAED,GAAI,EAAGZ,KAAM,eAAgBI,KAAM,yEAA0EU,KAAM,KAAMiB,gBAAiB,EAAGlB,QAAS,gEACxJ,CAAED,GAAI,EAAGZ,KAAM,WAAYI,KAAM,iCAAkCU,KAAM,KAAMiB,gBAAiB,EAAG7B,IAAKe,GACxG,CAAEL,GAAI,EAAGZ,KAAM,GAAII,KAAM,GAAIU,KAAM,KAAMiB,gBAAiB,KAuBvDb,QCrBAiB,G,6KAVX,OACE,yBAAKtC,UAAU,OACb,4CACA,iEACA,kBAAC,EAAD,W,GANUS,cCQE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a9d4e818.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EmilyBlog.2ac90392.png\";","module.exports = __webpack_public_path__ + \"static/media/GhoulGame.64c9ab7c.png\";","import React, { Component } from 'react';\nimport './Projectcard.css';\n\n//const POKE_API = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/';\n//const POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\n\n//let padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\n\nclass Projectcard extends Component {\n    render() {\n        //let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\n        return ( \n            <div className=\"Projectcard\">\n                <h1 className=\"Projectcard-title\">{this.props.name}</h1>\n                <img src={this.props.img} alt={this.props.alt} />\n                <div className=\"Projectcard-data\">{this.props.type}</div>\n                <div className=\"Projectcard-data\">{this.props.exp}</div>\n            </div>\n        );\n    }\n};\n\nexport default Projectcard;","import React, { Component } from 'react';\nimport Projectcard from './Projectcard';\nimport './Pokedex.css';\n\nclass Pokedex extends Component {\n    render() {\n        let title;\n        // if(this.props.isWinner) {\n        //     title = <h1 className=\"Pokedex-winner\">Web and game development</h1>;\n        // } else {\n        //     title = <h1 className=\"Pokedex-loser\">Data analysis and data science</h1>;\n        // };\n        return (\n            <div className=\"Pokedex\">\n                <h1>{title}</h1>\n                <h4>Total projects: {this.props.exp}</h4>\n                <div className=\"Pokedex-cards\">\n                    {this.props.projects.map((p) => (\n                        <Projectcard id={p.id} img={p.img} alt={p.altText} name={p.name} type={p.type} exp={p.year} />\n                    ))}\n                </div>  \n            </div>\n        );\n        \n    }\n}\n\nexport default Pokedex;","import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\n\nvar EmilyBlog = require('./img/EmilyBlog.png');\nvar GhoulGame = require('./img/GhoulGame.png');\n\nclass Portfolio extends Component {\n    static defaultProps = {\n        projects : [\n            { id: 1, name: 'Turn on', type: 'Put AAA batteries in. If already done, press a button to wake device up.', year: 2018, base_experience: 1, altText: 'Screenshot of game' },\n            { id: 2, name: 'Select sound', type: 'Press number 1 to 16 to select a sound. Start a pattern first if you want to play along.', year: 2019, base_experience: 1, img: EmilyBlog, altText: 'Screenshot of blog detailing the progress made in making game' },\n            { id: 3, name: 'Set volume', type: 'Press BPM + any numbered key 1 to 16. Low is 1, max is 16.', year: 2019, base_experience: 1, altText: 'Screenshot of Python code' },\n            { id: 4, name: 'Play pattern', type: 'Hold Pattern + number 1 to 16 to select pattern, then Play to play it.', year: 2016, base_experience: 1, altText: 'Screenshot of people interacting in this nonprofit workplace' },\n            { id: 5, name: 'Turn off', type: 'Press sound + BPM at same time', year: 2018, base_experience: 1, img: GhoulGame },\n            { id: 6, name: '', type: '', year: 2019, base_experience: 1 }\n        ]\n    };\n\n    render() {\n        let hand1 = [];\n        let hand2 = [...this.props.projects ];\n        while( hand1.length < hand2.length ) {\n            let randIdx = Math.floor(Math.random() * hand2.length);\n            let randprojects = hand2.splice(randIdx, 1)[0];\n            hand1.push(randprojects);\n        }\n        let exp1 = hand1.reduce((exp, projects) => exp + projects.base_experience, 0);\n        let exp2 = hand2.reduce((exp, projects) => exp + projects.base_experience, 0);\n        return (\n            <div>\n                <Pokedex projects={hand1} exp={exp1} isWinner={ exp1 > exp2 } />\n                <Pokedex projects={hand2} exp={exp2} isWinner={ exp2 > exp1 } />\n            </div>\n        );\n    }\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\nimport Portfolio from './Portfolio';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Pocket Music</h1>\n        <h2>Pocket Operator Quick Start Guide</h2>\n        <Portfolio />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}